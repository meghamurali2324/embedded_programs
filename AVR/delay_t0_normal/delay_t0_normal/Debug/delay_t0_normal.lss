
delay_t0_normal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000011a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000c6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000011a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000014c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006bb  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000063b  00000000  00000000  0000086f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000241  00000000  00000000  00000eaa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000010ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000350  00000000  00000000  00001120  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000024  00000000  00000000  00001470  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001494  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 57 00 	call	0xae	; 0xae <main>
  78:	0c 94 61 00 	jmp	0xc2	; 0xc2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <delay_1s>:
#include <avr/io.h>

void delay_1s(void){
	unsigned int i;
	unsigned int count=976;
	for(i=0; i<count; i++){
  80:	20 e0       	ldi	r18, 0x00	; 0
  82:	30 e0       	ldi	r19, 0x00	; 0
  84:	0f c0       	rjmp	.+30     	; 0xa4 <delay_1s+0x24>
		TCNT0=0;
  86:	16 bc       	out	0x26, r1	; 38
		TCCR0A=0;
  88:	14 bc       	out	0x24, r1	; 36
		TCCR0B|=(1<<CS00);
  8a:	85 b5       	in	r24, 0x25	; 37
  8c:	81 60       	ori	r24, 0x01	; 1
  8e:	85 bd       	out	0x25, r24	; 37
		TCCR0B|=(1<<CS01);
  90:	85 b5       	in	r24, 0x25	; 37
  92:	82 60       	ori	r24, 0x02	; 2
  94:	85 bd       	out	0x25, r24	; 37
		TIFR0|=(1<<TOV0);
  96:	85 b3       	in	r24, 0x15	; 21
  98:	81 60       	ori	r24, 0x01	; 1
  9a:	85 bb       	out	0x15, r24	; 21
		
		while(!(TIFR0 & (1<<TOV0)));
  9c:	a8 9b       	sbis	0x15, 0	; 21
  9e:	fe cf       	rjmp	.-4      	; 0x9c <delay_1s+0x1c>
#include <avr/io.h>

void delay_1s(void){
	unsigned int i;
	unsigned int count=976;
	for(i=0; i<count; i++){
  a0:	2f 5f       	subi	r18, 0xFF	; 255
  a2:	3f 4f       	sbci	r19, 0xFF	; 255
  a4:	20 3d       	cpi	r18, 0xD0	; 208
  a6:	83 e0       	ldi	r24, 0x03	; 3
  a8:	38 07       	cpc	r19, r24
  aa:	68 f3       	brcs	.-38     	; 0x86 <delay_1s+0x6>
		TCCR0B|=(1<<CS01);
		TIFR0|=(1<<TOV0);
		
		while(!(TIFR0 & (1<<TOV0)));
	}
}
  ac:	08 95       	ret

000000ae <main>:
int main(void)
{
	DDRB|=(1<<DDB5);
  ae:	84 b1       	in	r24, 0x04	; 4
  b0:	80 62       	ori	r24, 0x20	; 32
  b2:	84 b9       	out	0x04, r24	; 4
	while (1)
	{
		PORTB^=(1<<PORTB5);
  b4:	95 b1       	in	r25, 0x05	; 5
  b6:	80 e2       	ldi	r24, 0x20	; 32
  b8:	89 27       	eor	r24, r25
  ba:	85 b9       	out	0x05, r24	; 5
		delay_1s();
  bc:	0e 94 40 00 	call	0x80	; 0x80 <delay_1s>
  c0:	f9 cf       	rjmp	.-14     	; 0xb4 <main+0x6>

000000c2 <_exit>:
  c2:	f8 94       	cli

000000c4 <__stop_program>:
  c4:	ff cf       	rjmp	.-2      	; 0xc4 <__stop_program>
